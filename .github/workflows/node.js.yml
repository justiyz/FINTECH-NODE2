# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build
on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - develop
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: mypass
          POSTGRES_DB: seedfi
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 54321:5432
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - run: npm install nyc -g
      - name: Install dependencies
        run:  npm install
      - name: Run Tests
        run:  npm run test
        env:
          SEEDFI_NODE_ENV : 'test'
          SEEDFI_DEV_PORT : '4000'
          SEEDFI_TEST_DATABASE_URL : 'postgres://postgres:mypass@localhost:54321/seedfi'
          SEEDFI_TEST_MESSAGE_FORWARDING: 'false'
          SEEDFI_TEST_ENCODING_AUTHENTICATION_SECRET : 'anyrandomstringforencodingjwtlevels'
          SEEDFI_TEST_BCRYPT_SALT_ROUND : '10'
          SEEDFI_TEST_PAYSTACK_SECRET_KEY : 'sk_test_d91f4618973f5d8c724716d82a9e93148b95d051'
          SEEDFI_TEST_CARD_TOKENIZING_AMOUNT: '500'
          SEEDFI_TEST_FIREBASE_SERVICE_ACCOUNT_TYPE : 'service_account'
          SEEDFI_TEST_FIREBASE_SERVICE_ACCOUNT_PROJECT_ID : 'seedfi-d9251'
          SEEDFI_TEST_FIREBASE_SERVICE_ACCOUNT_PRIVATE_KEY_ID : '386a9ba9bd3ea3531c8bcb496f9f512c3b51cf20'
          SEEDFI_TEST_FIREBASE_SERVICE_ACCOUNT_PRIVATE_KEY : '-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCiaMPfWFsEfGhr\nyTJazsh1WqCTV40sJ4eZWaZdK95QpkOrn/ELoTZTtX9aKpQgGFuTJ3NSP4g6WGnd\n8bgi2s78Zd+Rjo3EPvPdRLyI3zaDcLuPB9MQ+i8rxbromLL0hFaPyXv1vAcaIjVb\nfAXLop6o6CMgSy3oSe1MJ5zwvTeoHFdGa494sI3ZmfFHxa5PgaShhFKV1qtav8z+\nmtO4r6UNza7SBWqP+XQfEikkpd1o2EDQGsKyu4sUzA4rWykJM4GNRo8FhL+HWddY\ngKAIC2tRkOrWjR8VRJ6Q9eSksU8Usdt3XUw8NkbqScTPj+4vBwrJ+pTtLANoJeD5\nN3B7JGHDAgMBAAECggEAGHdx8qar54waawp/ZIC8YDmL8UaCRQGbgvWng2fFcR7r\nGOLafGcH+SphiiLZ98/Tk+Kgk+ZwTmHdaQsuM0oFXq62NIZmQwc807u0L2Z5HuoP\nx2dlW6xlCNIb60h9xSpepAC1hPqTk1NN+H9BnEDeaBG4oPfSbakdb5iUIwxOYyvM\nKtDkVnRDL1s1os3zYj4AmKzr3cbBSzORtT2jUUpx/ZimVu8E7OMLlklFBzr2fZfJ\nne6TqxtitSwV6+kLSxm78G0cJ6jvEJBBJJ+ozJ78PglbIcOvjcTpbq3l5yQetVHV\nfzODVicNtjSusptZcou+kl2USOCciMdO/UZztxTCAQKBgQDeccAeyWmNnaoz0XQs\nPNehdBNNeuDb29ckA2svAG0JN1aX0ziW+AMtTxsoPG95/ZVniLK7IEfQdIHrUoTC\nz/Zh6BhV0CXQ/v60ZwDCO1zO8hgPQtOFdFB9wfSDvPVTXoXUw5wAxmNnu1SxWnwa\nJf9RR7kkAKp6ud/o0IKlHLXxAQKBgQC66JuX6B/vT+rxgH5PHehMfO1jhZC8fZ2s\nxZTOGtLYnW4YEbgc2KgJHjKAzak8iVubFPFjMEGjbk2iV2zcnO+r+HAyz1YzY1IY\nQ344zdq+/OzcbfoGs5WwO/Oll0Zsd3yehG8PGwJaFONeaVSL4HIirNqCxv0uGX68\nENBbhZ/OwwKBgE0nMRa8j0LSO7WLYXryg2v5gbRu+UzonF9eXC/KOwdmTT+NwGQE\nk72EYYv8IkIypT5q2Gs1EBOKRYGkdm3HidJ9mOsyrdsmhpt12nqD8nXI3HV2nTz9\nkel8e12yDXkkINEiI5rVNKdG/2IgW0kKgtrjQKDvJjI5BCORJq80HRsBAoGAdmeW\n8eOmH2eEUZtx6NLsb1AQ3qQlbZMySNoeC3corPsGXI8VEIkb4jLUEY63sFbfxl29\nEXXnjw34dmhl2Vg96LaI9Vctp3466o4PLxMRiT4XGwk8g/ROVoeUMQmlHl+Pfagt\n5ubYVZK3+v5FBhuYkmjoQEKo7wRNqfwI0oHTHBsCgYEAk73RJe1DdPw458auCxGq\nYAA6lOPz6LimfoZRobYlvGKiTQO1CKHs1GRG2IJx35Y6ZiAW9uZez4S01/ia4XD/\n0jeUl+as5t8hyQM+N8YBVwUcNhf4fTJaM8+0BAtPi0WrwzedAOZH4jUFlhYELUjU\nUURO6tiTRrlyJ9FzkDPhOQ8=\n-----END PRIVATE KEY-----\n'
          SEEDFI_TEST_FIREBASE_SERVICE_ACCOUNT_CLIENT_EMAIL : 'firebase-adminsdk-k4buo@seedfi-d9251.iam.gserviceaccount.com'
          SEEDFI_TEST_FIREBASE_SERVICE_ACCOUNT_CLIENT_ID : '105504060609492593244'
          SEEDFI_TEST_FIREBASE_SERVICE_ACCOUNT_AUTH_URI : 'https://accounts.google.com/o/oauth2/auth'
          SEEDFI_TEST_FIREBASE_SERVICE_ACCOUNT_TOKEN_URI : 'https://oauth2.googleapis.com/token'
          SEEDFI_TEST_FIREBASE_SERVICE_ACCOUNT_AUTH_PROVIDER_CERT_URL : 'https://www.googleapis.com/oauth2/v1/certs'
          SEEDFI_TEST_FIREBASE_SERVICE_ACCOUNT_CLIENT_CERT_URL : 'https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-k4buo%40seedfi-d9251.iam.gserviceaccount.com'
          SEEDFI_TEST_FIREBASE_DATABASE_URL : 'https://seedfi.firebaseio.com'
          SEEDFI_TEST_UNDERWRITING_SERVICE_BASE_URL: 'https://staging-underwriting-api.enyata.com'
          SEEDFI_TEST_UNDERWRITING_SERVICE_API_KEY: '4NOSyMzb.NVj7HdWgCxnvZOkHqPygchIMkP42zBGO'
          SEEDFI_TEST_ALLOWABLE_ORIGINS: 'http://locahost:7000, http://locahost:8000'
          SEEDFI_TEST_NEW_DEVICE_LOGIN_WAVER_USERS: 'randomemail@gmail.com,qa@enyata.com'
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - uses: 8398a7/action-slack@v3
        env:
          SLACK_BOT_TOKEN: ${{ secrets.ENYATA_SLACK_BOT_TOKEN}}
          SLACK_WEBHOOK_URL: ${{ secrets.ENYATA_SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest # selectable (default: repo,message)
  
        if: always()
